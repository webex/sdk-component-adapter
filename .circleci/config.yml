version: 2.1

# reusable environment for all jobs
executors:
  node-fermium-executor:
    working_directory: ~/sdk-component-adapter
    docker:
      - image: circleci/node:fermium-browsers
  node-erbium-executor:
    working_directory: ~/sdk-component-adapter
    docker:
      - image: circleci/node:erbium-browsers
        environment:
          NODE_ENV: development # Only needed if puppeteer is in `devDependencies`

# reusable command for all jobs
commands:
  checkout_from_workspace:
    description: 'To checkout and attach the workspace'
    steps:
      - checkout
      - attach_workspace:
          at: ~/sdk-component-adapter

# define jobs
jobs:
  install:
    executor: node-fermium-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies & Peer Dependencies
          command: npx npm-install-peers
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths: node_modules
      - persist_to_workspace:
          root: .
          paths: node_modules

  unit-test:
    executor: node-fermium-executor
    steps:
      - checkout_from_workspace
      - run:
          name: Linting
          command: npm run linter
      - run:
          name: Unit Test Coverage
          command: npm run test:unit -- --coverage
      - store_test_results:
          path: test_results

  integration-test:
    executor: node-fermium-executor
    steps:
      - checkout_from_workspace
      - run:
          name: Integration Test Coverage
          command: npm run test:integration -- --coverage
      - store_test_results:
          path: test_results

  build:
    executor: node-fermium-executor
    steps:
      - checkout_from_workspace
      - run:
          name: Build
          command: npm run build
      - persist_to_workspace:
          root: .
          paths: dist

  release:
    executor: node-fermium-executor
    steps:
      - checkout_from_workspace
      - run:
          name: Release
          command: npm run release

# execute the jobs in a orderly manner
workflows:
  setup_test_release:
    jobs:
      - install
      - unit-test:
          requires:
            - install
      - build:
          requires:
            - unit-test
          filters:
            branches:
              only: master
      - release:
          requires:
            - build
          filters:
            branches:
              only: master
